import requests, json, urllib.request
from flask import Flask, request, jsonify, abort
import sys
application = Flask(__name__)


@application.route("/")
def hello():
    return "Hello goorm!"

@application.route("/a")
def hello2():
    return '<h1 style="color:cyan">Hello goorm!</h1>'

@application.route("/mylotto", methods=['POST'])
def getLotto():
    resPonseMsg = ''
    url = 'https://www.dhlottery.co.kr/common.do?method=getLottoNumber&drwNo='
    lottourl = 'https://www.dhlottery.co.kr/common.do?method=getLottoNumber&drwNo='
    # 폴백 블록을 활용할 수도 있지만 일반 블록을 활용해 볼 예정
    # 즉 파라메터 값을 활용할 예정
    drwNo = '1'
    try:
        body = request.get_json()
        print(body)
        drwNo = body['action']['detailParams']['Lotto']['origin']
        print('drwNo 값! 단, 로또 이 이런식으로 적으면 이를 2로 바꾸는 코드가 없는 이상 오류 남')
        print(drwNo)
        lottourl = url + drwNo
    except: #로또 최신이라고 입력한 경우, 즉 Lotto 1이나 로또 1등으로 입력하지 않은 경우
        print('로또 최신 검색 중...')
        try:
            mymsg = body['userRequest']['utterance']
            if mymsg.split()[1] == '최신':
                drwNo = 1110
                while True:
                    print('...')
                    lottourl = url + str(drwNo)
                    res = urllib.request.urlopen(lottourl)
                    res_msg = res.read().decode('utf8')
                    jres = json.loads(res_msg)
                    print(lottourl)
                    print(jres)
                    if jres['returnValue'] == 'success':
                        print('@drwNo ' + str(drwNo))
                        drwNo += 1
                        print('-drwNo ' + str(drwNo))
                    else:
                        drwNo -= 1
                        lottourl = url + str(drwNo)
                        break
            else:
                print('그냥 로또라는 글자만 들어간 경우 1 ex.로또 일회차')
                lottourl = url+drwNo
        except:
            print('그냥 로또라는 글자만 들어간 경우 2')        
            print('이도 저도 아닌 경우에는 그냥 1회차 출력을 하자')
            lottourl = url+drwNo
        
    res = urllib.request.urlopen(lottourl)
    res_msg = res.read().decode('utf8')
    jres = json.loads(res_msg) #읽어온 메시지를 json화
    if jres['returnValue'] != 'success':
        print(lottourl)
        resPonseMsg = '잘못된 입력입니다.'
    else:
        resPonseMsg = f"""
        {jres['drwtNo1']} {jres['drwtNo2']} {jres['drwtNo3']}
        {jres['drwtNo4']} {jres['drwtNo5']} {jres['drwtNo6']}
        보너스 : {jres['bnusNo']}
        """
    responseBody = {
        'version':'2.0',
        'template' : {
            'outputs' : [
                {
                    'simpleText' : {
                        'text' : resPonseMsg
                    }
                },
                {
                    'simpleImage' : {
                        'imageUrl':'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlhPa-bfqWN69U5NnkX0NuE4yz-UmLGHtNCSVmc_hnQw&s',
                        'altText' : 'Lotto이미지'
                    }
                }
            ]
        }
    }
    return responseBody

@application.route("/hello_kakao", methods=['POST'])
def kakaoHello():
    body = request.get_json() #request 객체, from flask import request
    #body에 카톡쪽에서 보낸 메시지가 저장됨
    print('!----!')
    print(body) #body 로그 한 번 찍어보기
    mymsg = body['userRequest']['utterance'] #유저의 메시지
    print('@----@')
    param1 = ''
    param2 = ''
    try:
        param1 = body['action']['detailParams']['Plant']['value']
        param2 = body['action']['detailParams']['sys_date']['value']
        print(param1)
        print(param2)
        print(body['action']['detailParams']['Plant']['origin'])
        print(body['action']['detailParams']['sys_date']['origin'])
    except:
        pass
    print('@----@')
    responseMsg = { #dict (=파이썬의 객체)
        'version':'2.0',
        'template':{
            'outputs' : [
                {
                    'simpleText' : {
                        'text' : f"""당신의메시지:{mymsg}"""
                    }
                }
            ]
        }
    }
    return responseMsg


if __name__ == "__main__":
    application.run(host='0.0.0.0', port=80)
